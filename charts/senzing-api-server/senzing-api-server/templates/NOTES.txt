## Overview

A server that supports the Senzing REST API.

More information:
 - https://github.com/Senzing/senzing-api-server
 - https://github.com/Senzing/charts/tree/master/charts/senzing-api-server/senzing-api-server
 - https://github.com/Senzing/senzing-rest-api

## Command

The command being run:

```console
java -jar senzing-api-server.jar \
  -httpPort 80
  {{- if .Values.senzing.allowedOrigins }} \
  - -allowedOrigins {{ .Values.senzing.allowedOrigins }}
  {{- end }}
  {{- if .Values.senzing.bindAddr }} \
  - -bindAddr {{ .Values.senzing.bindAddr }}
  {{- end }}
  {{- if .Values.senzing.concurrency }} \
  - -concurrency {{ .Values.senzing.concurrency }}
  {{- end }}
  {{- if .Values.senzing.iniFile }} \
  - -iniFile {{ .Values.senzing.iniFile }}
  {{- end }}
  {{- if .Values.senzing.moduleName }} \
  - -moduleName {{ .Values.senzing.moduleName }}
  {{- end }}
  {{- if .Values.senzing.monitorFile }} \
  - -monitorFile {{ .Values.senzing.monitorFile }}
  {{- end }}
  {{- if .Values.senzing.verbose }} \
  - -verbose
  {{- end }}
```

{{- if .Values.ingress.enabled }}
{{- else if contains "NodePort" .Values.service.type }}
{{- else if contains "LoadBalancer" .Values.service.type }}
{{- else if contains "ClusterIP" .Values.service.type }}

## Logon

  1. Example:

    ```console
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "senzing-api-server.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
    kubectl exec -it --namespace {{ .Release.Namespace }} ${POD_NAME} -- /bin/bash
    ```

## Port-forward

  1. Example:

    ```console
    export MY_PORT=8889
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "senzing-api-server.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
    
    kubectl port-forward \
      --address 0.0.0.0 \
      --namespace {{ .Release.Namespace }} \
      svc/${POD_NAME} ${MY_PORT}:80
    ```

{{- end }}


## Application URL

1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range $.Values.ingress.paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}

  ```console
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "senzing-api-server.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
  ```

{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w {{ include "senzing-api-server.fullname" . }}'

  ```console
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "senzing-api-server.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.port }}
  ```

{{- else if contains "ClusterIP" .Values.service.type }}

  ```console
  export POD_NAME=$(rancher kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "senzing-api-server.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward $POD_NAME 8080:8080
  ```

{{- end }}
