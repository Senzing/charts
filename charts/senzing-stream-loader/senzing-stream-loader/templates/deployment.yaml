apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "senzing-stream-loader.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "senzing-stream-loader.name" . }}
    helm.sh/chart: {{ include "senzing-stream-loader.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "senzing-stream-loader.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "senzing-stream-loader.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:

      {{ if .Values.senzing.optSenzingClaim }}
      volumes:
        - name: opt-senzing-storage
          persistentVolumeClaim:
            claimName: {{ .Values.senzing.optSenzingClaim }}
      {{ end }}

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          {{ if .Values.senzing.optSenzingClaim }}
          volumeMounts:
            - name: opt-senzing-storage
              mountPath: /opt/senzing
          {{ end }}

          command:
            - /app/docker-entrypoint.sh
            - /app/stream-loader.py
          env:
            {{ if .Values.senzing.dataSource }}
            - name: SENZING_DATA_SOURCE
              value: "{{ .Values.senzing.dataSource }}"
            {{ end }}
            {{ if .Values.senzing.databaseUrl }}
            - name: SENZING_DATABASE_URL
              value: "{{ .Values.senzing.databaseUrl }}"
            {{ end }}
            {{ if .Values.senzing.debug }}
            - name: SENZING_DEBUG
              value: "{{ .Values.senzing.debug }}"
            {{ end }}
            {{ if .Values.senzing.entityType }}
            - name: SENZING_ENTITY_TYPE
              value: "{{ .Values.senzing.entityType }}"
            {{ end }}
            {{ if .Values.senzing.entrypointSleep }}
            - name: SENZING_ENTRYPOINT_SLEEP
              value: "{{ .Values.senzing.entrypointSleep }}"
            {{ end }}
            {{ if .Values.senzing.kafkaBootstrapServerHost }}
            - name: SENZING_KAFKA_BOOTSTRAP_SERVER
              value: "{{ .Values.senzing.kafkaBootstrapServerHost }}:{{ .Values.senzing.kafkaBootstrapServerPort }}"
            {{ end }}
            {{ if .Values.senzing.kafkaGroup }}
            - name: SENZING_KAFKA_GROUP
              value: "{{ .Values.senzing.kafkaGroup }}"
            {{ end }}
            {{ if .Values.senzing.kafkaTopic }}
            - name: SENZING_KAFKA_TOPIC
              value: "{{ .Values.senzing.kafkaTopic }}"
            {{ end }}
            {{ if .Values.senzing.logLevel }}
            - name: SENZING_LOG_LEVEL
              value: "{{ .Values.senzing.logLevel }}"
            {{ end }}
            {{ if .Values.senzing.monitoringPeriod }}
            - name: SENZING_MONITORING_PERIOD
              value: "{{ .Values.senzing.monitoringPeriod }}"
            {{ end }}
            {{ if .Values.senzing.threadsPerProcess }}
            - name: SENZING_THREADS_PER_PROCESS
              value: "{{ .Values.senzing.threadsPerProcess }}"
            {{ end }}
            {{ if .Values.senzing.subcommand }}
            - name: SENZING_SUBCOMMAND
              value: "{{ .Values.senzing.subcommand }}"
            {{ end }}

          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
